/************************************************
| CONFIGURATION FILE FOR NAO VIRAL MGS WORKFLOW |
************************************************/

params {
    mode = "run"

    // Sequencing platform
    ont = <TRUE OR FALSE BASED ON SEQUENCING PLATFORM> // Whether the sequencing is ONT (true) or Illumina (false)

    // Human filtering
    human_read_filtering = false // Whether to filter human reads

    // Directories
    base_dir = <PATH TO YOUR DIRECTORY> // Parent for working and output directories (can be S3)
    ref_dir = <PATH TO YOUR ORGS REFERENCE DIRECTORY> // Reference/index directory (generated by index workflow)

    // Files
    sample_sheet = "${launchDir}/samplesheet.csv" // Path to library TSV
    adapters = "${projectDir}/ref/adapters.fasta" // Path to adapter file for adapter trimming

    // Other required parameters
    n_reads_profile = 1000000 // Number of reads per sample to run through taxonomic profiling
    bt2_score_threshold = 20 // Normalized score threshold for calling a host-infecting virus read (typically 15 or 20)
    bracken_threshold = 10 // Bracken read threshold (default 10, can be lowered for testing on very small datasets)
    host_taxon = "vertebrate"
    random_seed = "" // Random seed for testing non-deterministic processes. Leave blank in non-test settings.

    // BLAST validation (optional)
    blast_db_prefix = "core_nt"
    blast_viral_fraction = 0 // Fraction of putative host-infecting virus reads to BLAST vs nt (0 = don't run BLAST)
    blast_min_frac = 0.9 // Keep BLAST hits whose bitscore is at least this fraction of the best bitscore for that query
    blast_max_rank = 5 // Keep BLAST hits whose dense bitscore rank for that query is at most this value
}

includeConfig "${projectDir}/configs/logging.config"
includeConfig "${projectDir}/configs/containers.config"
includeConfig "${projectDir}/configs/resources.config"
includeConfig "${projectDir}/configs/profiles.config"
includeConfig "${projectDir}/configs/output.config"
includeConfig "${projectDir}/configs/read_type.config"
process.queue = <NAME OF YOUR AWS BATCH JOB QUEUE> // AWS Batch job queue
