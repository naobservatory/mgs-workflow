
---
title: "Checking if single-read version of mgs-workflow works"
author: "Simon Grimm"
date: 2024-10-23
format:
  html:
    code-fold: true
    code-tools: true
    code-link: true
    df-print: paged
    toc: true
    toc-depth: 2
    number-sections: true
    number-depth: 3
    crossref:
      fig-title: Figure
      fig-prefix: Figure
      chapters: true
editor: visual
title-block-banner: black
---

```{r}
# Print current working directory
cat("Current working directory:", getwd(), "\n")

````


```{r}
#| label: load-packages
#| include: false

# Import libraries
library(tidyverse)
library(cowplot)
library(patchwork)
library(fastqcr)
library(RColorBrewer)
# library(ggpubr)
# library(ggbeeswarm)

# Import auxiliary scripts
source("scripts/aux_plot-theme.R")
source("scripts/aux_functions.R")

# Print current working directory
cat("Current working directory:", getwd(), "\n")


# Scales and palettes
scale_fill_loc <- purrr::partial(scale_fill_brewer, name="Location",
                                 palette="Dark2")
scale_color_loc <- purrr::partial(scale_color_brewer, name="Location",
                                 palette="Dark2")
scale_shape_loc <- purrr::partial(scale_shape_discrete, name = "Location")

```

```{r}
# Data input paths
single_end_dir <- "../mgs-results/single_end"
paired_end_dir <- "../mgs-results/paired_end"

se_output_dir <- file.path(single_end_dir, "output")
pe_output_dir <- file.path(paired_end_dir, "output")

se_results_dir <- file.path(se_output_dir, "results")
pe_results_dir <- file.path(pe_output_dir, "results")

se_qc_dir <- file.path(se_results_dir, "qc")
pe_qc_dir <- file.path(pe_results_dir, "qc")

basic_stats_path <- file.path(se_qc_dir, "qc_basic_stats.tsv.gz")

# Load basic stats
basic_stats <- read_tsv(basic_stats_path, show_col_types = FALSE)

# Print the first few rows to verify the data
print(head(basic_stats))



adapter_stats_paths <- file.path(se_qc_dir, "qc_adapter_stats.tsv.gz")
quality_base_stats_paths <- file.path(se_qc_dir, "qc_quality_base_stats.tsv.gz")
quality_seq_stats_paths <- file.path(se_qc_dir, "qc_quality_sequence_stats.tsv.gz")

```

```{r}
# Import QC data
library(tidyverse)

stages <- c("raw_concat", "cleaned")

basic_stats <- lapply(basic_stats_paths, read_tsv, show_col_types = FALSE)

```





## Adapters

Adapter levels in the raw reads were moderate, and were very effectively removed by preprocessing with FASTP:

```{r}
#| label: fig-adapters
#| fig-cap: "FASTQC-measured adapter contamination in raw and FASTP-cleaned reads."
#| edit-manually: true
#| fig-width: 10

g_qual <- ggplot(mapping=aes(color=location, linetype=read_pair,
                         group=interaction(sample,read_pair))) +
  scale_color_loc() + scale_linetype_discrete(name = "Read Pair") +
  guides(color=guide_legend(nrow=2,byrow=TRUE),
         linetype = guide_legend(nrow=2,byrow=TRUE)) +
  theme_base

# Visualize adapters
g_adapters <- g_qual +
  geom_line(aes(x=position, y=pc_adapters), data=adapter_stats) +
  scale_y_continuous(name="% Adapters", limits=c(0,NA),
                     breaks = seq(0,1000,10), expand=c(0,0)) +
  scale_x_continuous(name="Position along read", limits=c(0,NA),
                     breaks=seq(0,140,20), expand=c(0,0)) +
  facet_grid(stage~adapter)
g_adapters

```

## Quality

Qualities were high across deliveries, both at the per-base and per-read level:

```{r}
#| label: fig-quality-base
#| fig-cap: "FASTQC-measured per-base quality scores."
#| fig-width: 8
#| edit-manually: true

g_quality_base <- g_qual +
  geom_hline(yintercept=25, linetype="dashed", color="red") +
  geom_hline(yintercept=30, linetype="dashed", color="red") +
  geom_line(aes(x=position, y=mean_phred_score), data=quality_base_stats) +
  scale_y_continuous(name="Mean Phred score", expand=c(0,0), limits=c(10,45)) +
  scale_x_continuous(name="Position", limits=c(0,NA),
                     breaks=seq(0,140,20), expand=c(0,0)) +
  facet_grid(stage~.)
g_quality_base
```

```{r}
#| label: fig-quality-read
#| fig-cap: "FASTQC-measured per-read quality scores."
#| edit-manually: false
#| fig-width: 8

g_quality_seq <- g_qual +
  geom_vline(xintercept=25, linetype="dashed", color="red") +
  geom_vline(xintercept=30, linetype="dashed", color="red") +
  geom_line(aes(x=mean_phred_score, y=n_sequences), data=quality_seq_stats) +
  scale_x_continuous(name="Mean Phred score", expand=c(0,0)) +
  scale_y_continuous(name="# Sequences", expand=c(0,0)) +
  facet_grid(stage~., scales = "free_y")
g_quality_seq
```

## GC content

Unenriched samples show somewhat lower average GC content than enriched samples, with the former showing a mean GC content of 43.4% and the latter 47.9%:

```{r}
#| label: fig-gc-qc
#| fig-cap: "Distribution of GC content across samples."

# Get raw GC content
gc_content <- basic_stats_raw %>%
  group_by(across(all_of(grouping_cols))) %>%
  summarize(mean_percent_gc = mean(percent_gc),
            .groups = "drop")

# Plot
g_gc_st <- ggplot(gc_content, aes(x=enrichment, y=mean_percent_gc)) +
  geom_boxplot() +
  geom_quasirandom(alpha=0.7, shape=16) +
  scale_y_continuous(name="Mean GC content (% bases)") +
  coord_flip() +
  guides(color=guide_legend(nrow=2)) +
  theme_base + theme(axis.title.y = element_blank())
g_gc_st
```