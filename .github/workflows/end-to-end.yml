name: End-to-end MGS workflow test

on:
  pull_request:
    branches:
      - main
      - dev
      - stable

jobs:
  test-index:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.NAO_TESTING_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}

    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.NAO_TESTING_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Nextflow (25.4.3)
        uses: nf-core/setup-nextflow@v1
        with:
          version: "25.4.3"

      - name: Install nf-test
        run: |
          for i in 1 2 3 4 5; do
            echo "Attempt $i to download nf-test..."
            wget -qO- https://get.nf-test.com | bash && break
            sleep 10
          done
          sudo mv nf-test /usr/local/bin/

      - name: Run index workflow
        run: nf-test test --tag index --verbose

  test-run-output:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.NAO_TESTING_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
    
    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.NAO_TESTING_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Nextflow (25.4.3)
        uses: nf-core/setup-nextflow@v1
        with:
          version: "25.4.3"

      - name: Install nf-test
        run: |
          for i in 1 2 3 4 5; do
            echo "Attempt $i to download nf-test..."
            wget -qO- https://get.nf-test.com | bash && break
            sleep 10
          done
          sudo mv nf-test /usr/local/bin/

      - name: Run run workflow (short read)
        run: nf-test test --tag run_output --verbose --ci

  test-run-output-ont:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.NAO_TESTING_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
    
    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.NAO_TESTING_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Nextflow (25.4.3)
        uses: nf-core/setup-nextflow@v1
        with:
          version: "25.4.3"

      - name: Install nf-test
        run: |
          for i in 1 2 3 4 5; do
            echo "Attempt $i to download nf-test..."
            wget -qO- https://get.nf-test.com | bash && break
            sleep 10
          done
          sudo mv nf-test /usr/local/bin/

      - name: Run run workflow (ONT)
        run: nf-test test --tag run_output_ont --verbose --ci


  test-validation:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.NAO_TESTING_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
    
    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.NAO_TESTING_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Nextflow (25.4.3)
        uses: nf-core/setup-nextflow@v1
        with:
          version: "25.4.3"

      - name: Install nf-test
        run: |
          for i in 1 2 3 4 5; do
            echo "Attempt $i to download nf-test..."
            wget -qO- https://get.nf-test.com | bash && break
            sleep 10
          done
          sudo mv nf-test /usr/local/bin/

      - name: Run run_validation workflow
        run: nf-test test --tag run_validation_viral_hits --verbose

  test-downstream-output:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.NAO_TESTING_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
    
    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.NAO_TESTING_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.NAO_TESTING_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Nextflow (25.4.3)
        uses: nf-core/setup-nextflow@v1
        with:
          version: "25.4.3"

      - name: Install nf-test
        run: |
          for i in 1 2 3 4 5; do
            echo "Attempt $i to download nf-test..."
            wget -qO- https://get.nf-test.com | bash && break
            sleep 10
          done
          sudo mv nf-test /usr/local/bin/

      - name: Run DOWNSTREAM workflow and check output
        run: nf-test test --tag downstream_output --verbose --ci
