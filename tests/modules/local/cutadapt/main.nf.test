nextflow_process {

    name "Test process CUTADAPT_STREAMED"
    script "modules/local/cutadapt/main.nf"
    process "CUTADAPT_STREAMED"
    config "tests/run.config"

    setup {
        run("LOAD_SAMPLESHEET") {
            script "subworkflows/local/loadSampleSheet/main.nf"
            process {
                """
                input[0] = "${projectDir}/test-data/samplesheet.csv"
                input[1] = false
                input[2] = false
                """
            }
        }
        run("INTERLEAVE_FASTQ") {
            script "modules/local/interleaveFastq/main.nf"
            process {
                """
                input[0] = LOAD_SAMPLESHEET.out.samplesheet
                """
            }
        }
    }

    test("Should run without failures and conserve reads") {
        when {
            params {
            }
            process {
                '''
                input[0] = INTERLEAVE_FASTQ.out.output
                input[1] = "${params.adapters}"
                '''
            }
        }
        then {
            // Should run without failures
            assert process.success
            // Should conserve reads between input and output
            def countGzipLines = { file -> path(file).linesGzip.size() }
            def total_output_lines = countGzipLines(process.out.reads[0][1])
            def total_input_lines  = countGzipLines(process.out.input[0][1])
            assert total_output_lines == total_input_lines
            // Output should have a nonzero number of lines divisible by eight
            // (for an interleaved FASTQ file)
            assert total_output_lines > 0
            assert total_output_lines % 8 == 0
        }
    }
}
