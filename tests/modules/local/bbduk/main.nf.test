nextflow_process {

    name "Test process BBDUK_HITS_STREAMED"
    script "modules/local/bbduk/main.nf"
    process "BBDUK_HITS_STREAMED"
    config "tests/run.config"

    setup {
        run("LOAD_SAMPLESHEET") {
            script "subworkflows/local/loadSampleSheet/main.nf"
            process {
                """
                input[0] = "test-data/samplesheet.csv"
                """
            }
        }
    }

    test("Should run without failures and conserve reads") {
        when {
            params {
            }
            process {
                '''
                input[0] = LOAD_SAMPLESHEET.out.samplesheet
                input[1] = "${params.ref_dir}/results/virus-genomes-filtered.fasta.gz"
                input[2] = "1"
                input[3] = "24"
                input[4] = "viral"
                '''
            }
        }
        then {
            // Should run without failures
            assert process.success
            // Should conserve reads between input and output
            def countGzipLines = { file -> path(file).linesGzip.size() }
            def total_output_lines = countGzipLines(process.out.reads[0][1]) + countGzipLines(process.out.fail[0][1])
            def total_input_lines = countGzipLines(process.out.input[0][1][0]) + countGzipLines(process.out.input[0][1][1])
            assert total_output_lines == total_input_lines
        }
    }
}
