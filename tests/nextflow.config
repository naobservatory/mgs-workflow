/*
========================================================================================
    Nextflow config file for running tests
========================================================================================
*/

params {
    mode = "run"

    // Directories
    base_dir = "./" // Parent for working and output directories (can be S3)
    ref_dir = "s3://nao-harmon/index-test/output" // Reference/index directory (generated by index workflow)

    // Files
    sample_sheet = "${projectDir}/test-data/samplesheet.csv" // Path to library TSV
    adapters = "${projectDir}/ref/adapters.fasta" // Path to adapter file for adapter trimming

    // Numerical
    grouping = false // Whether to group samples by 'group' column in samplesheet
    n_reads_trunc = 0 // Number of reads per sample to run through pipeline (0 = all reads)
    n_reads_profile = 1000000 // Number of reads per sample to run through taxonomic profiling
    bt2_score_threshold = 20 // Normalized score threshold for calling a host-infecting virus read (typically 15 or 20)
    blast_viral_fraction = 1 // Fraction of putative host-infecting virus reads to BLAST vs nt (0 = don't run BLAST)
    kraken_memory = "12 GB" // Memory needed to safely load Kraken DB
    quality_encoding = "phred33" // FASTQ quality encoding (probably phred33, maybe phred64)
    fuzzy_match_alignment_duplicates = 0 // Fuzzy matching the start coordinate of reads for identification of duplicates through alignment (0 = exact matching; options are 0, 1, or 2)
    host_taxon = "vertebrate"

    kraken_db_path = "${ref_dir}/results/kraken_db"
    blast_db_prefix = "nt_others"
    blast_db_path = "${ref_dir}/results/${blast_db_prefix}"
    blast_mem = "15 GB"
    blast_filter_mem = "7.5 GB"
}

includeConfig "${projectDir}/configs/logging.config"
includeConfig "${projectDir}/configs/containers.config"
includeConfig "${projectDir}/configs/profiles.config"
includeConfig "${projectDir}/configs/output.config"
process.queue = "harmon-queue" // AWS Batch job queue

// Specify resources for processes based on labels
process {
    // Single-core processes
    withLabel: single {
        cpus = 1
        memory = 4.GB
    }

    // Small multi-core processes
    withLabel: small {
        cpus = 4
        memory = 8.GB
    }

    // Large multi-core processes
    withLabel: large {
        cpus = 4
        memory = 15.GB
    }

    // Very large multi-core processes
    withLabel: max {
        cpus = 4
        memory = 15.GB
    }
}

// What I need to do because I got error for touch .command.trace
// docker.fixOwnership = true
