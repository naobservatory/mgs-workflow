nextflow_pipeline {

    name "End-to-end test of MGS workflow"
    script "main.nf"

    test("Test index workflow") {
        config "tests/index.config"
        tag "index"

        then {
            assert workflow.success
        }
    }
    test("Test run workflow") {
        config "tests/run.config"
        tag "run"

        then {
            assert workflow.success
        }
    }
    test("Test single-end run workflow") {
        config "tests/run_dev_se.config"
        tag "run_dev_se"

        then {
            assert workflow.success
        }
    }
    test("Test validation workflow") {
        config "tests/run_validation.config"
        tag "validation"

        then {
            assert workflow.success
        }
    }

    test("Test run workflow output") {
        config "tests/run.config"
        tag "run_output"

        then {
            assert workflow.success
            assert snapshot(
                path("${launchDir}/output/results/bracken_reports_merged.tsv.gz"),
                path("${launchDir}/output/results/kraken_reports_merged.tsv.gz"),
                path("${launchDir}/output/results/subset_qc_adapter_stats.tsv.gz"),
                path("${launchDir}/output/results/subset_qc_basic_stats.tsv.gz"),
                path("${launchDir}/output/results/subset_qc_quality_base_stats.tsv.gz"),
                path("${launchDir}/output/results/subset_qc_quality_sequence_stats.tsv.gz"),
                path("${launchDir}/output/results/subset_qc_length_stats.tsv.gz"),
                path("${launchDir}/output/results/virus_clade_counts.tsv.gz"),
                path("${launchDir}/output/results/virus_hits_db.tsv.gz"),
                path("${launchDir}/output/results/blast_hits_paired.tsv.gz"),
                path("${launchDir}/output/results/virus_hits_1.fasta.gz"),
                path("${launchDir}/output/results/virus_hits_2.fasta.gz"),
                path("${launchDir}/output/results/read_counts.tsv.gz"),
            ).match("run_output")
        }

    }
}
