nextflow_workflow {

    name "Test Workflow PROCESS_LCA_BOWTIE_COLUMNS"
    script "subworkflows/local/processLcaBowtieColumns/main.nf"
    workflow "PROCESS_LCA_BOWTIE_COLUMNS"
    config "tests/configs/run.config"
    tag "subworkflow"
    tag "process_lca_bowtie_columns"

    setup {
        run("LOAD_SAMPLESHEET") {
            script "subworkflows/local/loadSampleSheet/main.nf"
            process {
                """
                input[0] = "${projectDir}/test-data/samplesheet.csv"
                input[1] = "illumina"
                input[2] = false
                """
            }
        }
        run("INTERLEAVE_FASTQ") {
            script "modules/local/interleaveFastq/main.nf"
            process {
                '''
                input[0] = LOAD_SAMPLESHEET.out.samplesheet
                '''
            }
        }
        run("BOWTIE2") {
                script "modules/local/bowtie2/main.nf"
                process {
                    '''
                    input[0] = INTERLEAVE_FASTQ.out.output 
                    input[1] = "${params.ref_dir}/results/bt2-virus-index"
                    input[2] = "--local --very-sensitive-local --score-min G,0.1,19"
                    input[3] = "virus"
                    input[4] = true
                    input[5] = false
                    input[6] = true
                    '''
                }
            }
        run("SORT_FILE") {
            script "modules/local/sortFile/main.nf"
            process {
                '''
                input[0] = BOWTIE2.out.sam
                input[1] = "-t\\$\'\\t\' -k1,1 -k2,2n"
                input[2] = "sam"
                '''
            }
        }
        run("PROCESS_VIRAL_BOWTIE2_SAM_LCA") {
            script "modules/local/processViralBowtie2SamLca/main.nf"
            process {
                '''
                input[0] = SORT_FILE.out.output
                input[1] = "${params.ref_dir}/results/virus-genome-metadata-gid.tsv.gz"
                input[2] = "${params.ref_dir}/results/total-virus-db-annotated.tsv.gz"
                input[3] = true
                '''
            }
        }
        run("LCA_TSV") {
            script "modules/local/lcaTsv/main.nf"
            process {
                '''
                input[0] = PROCESS_VIRAL_BOWTIE2_SAM_LCA.out.output
                input[1] = "${params.ref_dir}/results/taxonomy-nodes.dmp"
                input[2] = "${params.ref_dir}/results/taxonomy-names.dmp"
                input[3] = "seq_id"
                input[4] = "taxid"
                input[5] = "length_normalized_score"
                input[6] = "12908"
                input[7] = "aligner"
                '''
            }
        }

    }

    test("Should run without failures") {
        tag "expect_success"
        
        when {
            params {
                col_keep_no_prefix = ["seq_id", "aligner_taxid_lca"]
                col_keep_add_prefix = ["genome_id_all"]
            }
            workflow {
                """
                input[0] = LCA_TSV.out.output
                input[1] = PROCESS_VIRAL_BOWTIE2_SAM_LCA.out.output
                input[2] = params.col_keep_no_prefix
                input[3] = params.col_keep_add_prefix
                """
            }
        }

        then {
            assert workflow.success
        }

    }

}
