nextflow_workflow {

    name "Test Workflow PROCESS_LCA_BOWTIE_COLUMNS"
    script "subworkflows/local/processLcaBowtieColumns/main.nf"
    workflow "PROCESS_LCA_BOWTIE_COLUMNS"

    setup {
        run("LOAD_SAMPLESHEET") {
            script "subworkflows/local/loadSampleSheet/main.nf"
            process {
                """
                input[0] = "${projectDir}/test-data/samplesheet.csv"
                input[1] = "illumina"
                input[2] = false
                """
            }
        }
       run("BOWTIE2") {
                script "modules/local/bowtie2/main.nf"
                process {
                    '''
                    input[0] = LOAD_SAMPLESHEET.out.samplesheet 
                    input[1] = "${params.ref_dir}/results/mm2-virus-index"
                    input[2] = "virus"
                    input[3] = false
                    input[4] = ""
                    '''
                }
            }
        run("SORT_FILE"){}
        run("PROCESS_VIRAL_BOWTIE_SAM"){}
        run("LCA_TSV"){}

    }

    test("Should run without failures") {

        when {
            params {
                col_keep_no_prefix = ["seq_id", "aligner_taxid_lca"]
                col_keep_add_prefix = ["genome_id_all"]
            }
            workflow {
                """
                input[0] = LCA_TSV.out.output
                input[1] = BOWTIE2.out.output
                input[2] = params.col_keep_no_prefix
                input[3] = params.col_keep_add_prefix
                """
            }
        }

        then {
            assert workflow.success
            assert snapshot(workflow.out).match()
        }

    }

}
